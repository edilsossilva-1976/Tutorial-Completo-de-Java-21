Diferença entre JDK, JRE e JVM

Introdução

    À medida que você se aprofunda na programação Java, é essencial entender os principais componentes que compõem a plataforma Java: 
o Java Development Kit (JDK), o Java Runtime Environment (JRE) e a Máquina Virtual Java (JVM). Neste capítulo, exploraremos as diferenças 
entre esses componentes, suas funções e como eles interagem entre si para permitir o desenvolvimento e a execução em Java.


O que é JVM?

    Máquina Virtual Java (JVM)

        A Máquina Virtual Java (JVM) é uma máquina abstrata que fornece o ambiente de execução no qual o bytecode Java pode ser executado. Cada 
    sistema operacional e plataforma de hardware possui sua própria implementação da JVM, o que permite que programas Java sejam executados em 
    diversos dispositivos e sistemas operacionais.

        Pontos Principais:

        *   Independência de Plataforma: 
            A JVM permite que aplicações Java sejam independentes de plataforma, fornecendo uma camada que abstrai o hardware e o sistema operacional subjacentes.
        
        *   Execução de Bytecode: 
            A JVM executa o bytecode Java, que é compilado a partir do código-fonte Java.

        *   Gerenciamento de Memória: 
            A JVM gerencia a memória por meio da coleta de lixo, recuperando automaticamente a memória usada por objetos que não são mais necessários.
        
        *   Segurança: 
            A JVM fornece um ambiente de execução seguro, aplicando controles de acesso e impedindo operações não autorizadas.


O que é JRE?

    Java Runtime Environment (JRE)

        O Java Runtime Environment (JRE) é um pacote que fornece as bibliotecas e os recursos necessários para executar aplicativos Java. Ele inclui a JVM, 
    bibliotecas principais e outros componentes necessários para executar programas Java.

    Pontos Principais:

        *   Ambiente de Execução: 
            O JRE fornece o ambiente de execução para a execução de aplicações Java.

        *   Componentes: 
            O JRE inclui a JVM, as principais bibliotecas Java (como java.lang, java.util) e arquivos de suporte.

        *   Focado no Usuário: 
            O JRE destina-se a usuários que desejam executar aplicações Java, mas não precisam desenvolvê-las. Ele não inclui ferramentas de desenvolvimento 
            como compiladores e depuradores.


O que é JDK?

    Kit de Desenvolvimento Java (JDK)

        O Java Development Kit (JDK) é um pacote abrangente que fornece tudo o que é necessário para o desenvolvimento em Java. Inclui o JRE, além de ferramentas 
    de desenvolvimento como o compilador Java (javac), o depurador e diversos utilitários.

    Pontos Principais:

    *   Ambiente de Desenvolvimento: 
        O JDK fornece um ambiente completo para desenvolvimento Java, incluindo ferramentas para escrever, compilar e depurar código Java.

    *   Componentes: 
        O JDK inclui o JRE, ferramentas de desenvolvimento (javac, javadoc, jar) e bibliotecas e arquivos adicionais necessários para o desenvolvimento Java.

    *   Focado no Desenvolvedor: 
        O JDK é destinado a desenvolvedores que precisam escrever e compilar código Java. Ele inclui todas as ferramentas necessárias para desenvolvimento e testes.


Como eles funcionam juntos

    Interação entre JDK, JRE e JVM

        1.  Escrevendo Código:
            *   Como desenvolvedor, você escreve código-fonte Java usando um editor de texto ou IDE.
            *   O JDK fornece as ferramentas necessárias para escrever e gerenciar seu código.

        2.  Compilando Código:
            *   Você usa o compilador Java (javac), incluído no JDK, para compilar seu código-fonte Java (arquivos .java) em bytecode (arquivos .class).
            *   O bytecode compilado é independente de plataforma e pode ser executado em qualquer dispositivo com uma JVM.

        3.  Executando Código:
            *   O JRE fornece o ambiente de execução para executar o bytecode compilado.
            *   A JVM, incluída no JRE, interpreta ou compila o bytecode em código de máquina específico para o hardware e sistema operacional subjacentes.
            *   A JVM executa o código de máquina, executando seu aplicativo Java.



Diagram: Relationship Between JDK, JRE, and JVM
|-------------------------------------------------------|
|                         JDK                           |
|  |------------------------------------------------|   |
|  |                     JRE                        |   |
|  |      |----------|   |-------------------|      |   |
|  |      |   JVM    |   | Core / Libraries  |      |   |
|  |      |----------|   |-------------------|      |   |
|  |                                                |   |
|  |------------------------------------------------|   |
|                                                       |
|      |--------------------------------------|         |
|      |    Development Tools (javac, etc)    |         |
|      |--------------------------------------|         |
|                                                       |
|-------------------------------------------------------|


Conclusão
    Compreender as diferenças entre JDK, JRE e JVM é crucial para quem trabalha com Java. A JVM fornece o ambiente de execução independente de plataforma, 
o JRE inclui tudo o que é necessário para executar aplicações Java e o JDK é um kit de ferramentas completo para o desenvolvimento de programas Java. Ao 
entender como esses componentes interagem, você pode compreender melhor a arquitetura da plataforma Java e tomar decisões informadas sobre o desenvolvimento 
e a implantação Java.

