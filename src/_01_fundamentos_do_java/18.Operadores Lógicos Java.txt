Operadores Lógicos Java


Introdução
    Operadores lógicos em Java são usados ​​para realizar operações lógicas em expressões booleanas. Esses operadores são normalmente usados ​​em instruções de fluxo 
de controle, como loops if, while e for, onde as decisões são tomadas com base em múltiplas condições. Java fornece três operadores lógicos principais: 
AND (&&), OR (||) e NOT (!). Esses operadores ajudam a combinar múltiplas expressões booleanas ou a inverter o resultado de uma expressão booleana.

Pontos Principais:
    *   Expressões Booleanas: 
        Operadores lógicos operam em expressões booleanas e retornam um valor booleano (verdadeiro ou falso).

    *   Fluxo de Controle: 
        Comumente usados ​​em instruções condicionais para controlar o fluxo do programa.

    *   Curto-Circuito:     
        Os operadores AND (&&) e OR (||) apresentam comportamento de curto-circuito, o que significa que param de avaliar expressões assim que o resultado é determinado.
    
    
    Lista de Operadores Lógicos

    Java fornece os seguintes operadores lógicos:
    |------------------------------------------------------------------------------------------------------------|
    | Operator  |          Descrição        |      Exemplo       |                   Saída                       |  
    |------------------------------------------------------------------------------------------------------------|
    |    &&     |  Operador Logico AND (e)  | (b > b) && (c > d) | true se ambas as expressões forem verdadeiras |
    |------------------------------------------------------------------------------------------------------------|
    |    ||     |  Operador Logico OR (ou)  | (a > b) || (c > d) | true se ao menos uma expressão for verdadeira |    
    |------------------------------------------------------------------------------------------------------------|
    |     !     | Operador Logico NOT (não) | !(ab > b)          | inverte o resultado de uma expressão          | 
    |------------------------------------------------------------------------------------------------------------|


    Exemplos Detalhados de Operadores Lógicos
        Vamos explorar cada operador lógico com exemplos.

        1. AND Lógico (&&)
            O operador AND lógico && retorna verdadeiro se ambos os operandos forem verdadeiros. Se qualquer um dos operandos for falso, o resultado será falso. Este 
        operador é frequentemente usado quando várias condições precisam ser verdadeiras para que um determinado bloco de código seja executado.  
        
        public class LogicalAndExample {
            public static void main(String[] args) {
                int a = 5;
                int b = 10;
                int c = 15;

                boolean result = (a < b) && (b < c);  // true, since both conditions are true

                System.out.println("(a < b) && (b < c): " + result);  // Output: (a < b) && (b < c): true
            }
        }

        Explicação:
        Condição 1: a < b é verdadeira.
        Condição 2: b < c é verdadeira.
        Resultado: Como ambas as condições são verdadeiras, o resultado geral da operação lógica AND é verdadeiro.

        Saída:
        (a < b) && (b < c): true


    2. OU lógico (||)
        O operador lógico OU || retorna verdadeiro se pelo menos um dos operandos for verdadeiro. Se ambos os operandos forem falsos, o resultado será falso. Este 
    operador é usado quando pelo menos uma de várias condições precisa ser verdadeira para que um bloco de código seja executado.

    public class LogicalOrExample {
        public static void main(String[] args) {
            int a = 5;
            int b = 10;
            int c = 15;

            boolean result = (a > b) || (b < c);  // true, since one condition is true

            System.out.println("(a > b) || (b < c): " + result);  // Output: (a > b) || (b < c): true
        }
    }

    Explicação:
    Condição 1: a > b é falsa.
    Condição 2: b < c é verdadeira.
    Resultado: Como pelo menos uma condição é verdadeira, o resultado geral da operação lógica OU é verdadeiro.

    Saída:
    (a > b) || (b < c): true


    3. NOT lógico (!)
        O operador lógico NOT ! inverte o valor de uma expressão booleana. Se a expressão for verdadeira, ela se torna falsa, e se for falsa, ela se torna 
    verdadeira. Este operador é usado quando você precisa reverter o resultado de uma expressão booleana.

    public class LogicalNotExample {
        public static void main(String[] args) {
            int a = 5;
            int b = 10;

            boolean result = !(a > b);  // true, since a > b is false and !false is true

            System.out.println("!(a > b): " + result);  // Output: !(a > b): true
        }
    }

    Explicação:
    Condição: a > b é falso.
    Inversão: O operador ! inverte falso para verdadeiro.
    Resultado: O resultado geral da operação lógica NOT é verdadeiro.

    Saída:
    !(a > b): true


    Curto-circuito em Operadores Lógicos

    Curto-circuito AND (&&)
        O operador lógico AND && causa um curto-circuito, o que significa que, se o primeiro operando for falso, o segundo operando não será avaliado porque o 
    resultado já foi determinado como falso.

    public class ShortCircuitAndExample {
        public static void main(String[] args) {
            int a = 5;
            int b = 10;

            boolean result = (a > b) && (++b > 10);  // The increment operation is not performed

            System.out.println("Result: " + result);  // Output: Result: false
            System.out.println("Value of b: " + b);  // Output: Value of b: 10
        }
    }

    Explicação:
    Curto-circuito: Como a > b é falso, a segunda condição ++b > 10 não é avaliada e b permanece 10.

    Saída:
    Resultado: false
    Valor de b: 10


    Curto-circuito OU (||)
        O operador lógico OU || causa um curto-circuito, o que significa que, se o primeiro operando for verdadeiro, o segundo operando não será avaliado porque o 
    resultado já foi determinado como verdadeiro.

    public class ShortCircuitOrExample {
        public static void main(String[] args) {
            int a = 5;
            int b = 10;

            boolean result = (a < b) || (++b > 10);  // The increment operation is not performed

            System.out.println("Result: " + result);  // Output: Result: true
            System.out.println("Value of b: " + b);  // Output: Value of b: 10
        }
    }

    Explicação:
    Curto-circuito: Como a < b é verdadeiro, a segunda condição ++b > 10 não é avaliada e b permanece 10.

    Saída:
    Resultado: verdadeiro
    Valor de b: 10


Conclusão
    Os operadores lógicos Java são essenciais para a tomada de decisões em seu código, avaliando múltiplas condições. Eles permitem controlar o fluxo do seu 
programa com base em expressões booleanas complexas.

    Resumo:
    *   AND lógico (&&): 
        Retorna verdadeiro somente se ambos os operandos forem verdadeiros. Apresenta comportamento de curto-circuito.

    *   OR lógico (||): 
        Retorna verdadeiro se pelo menos um operando for verdadeiro. Apresenta comportamento de curto-circuito.

    *   NÃO lógico (!): 
        Inverte o valor de uma expressão booleana, transformando verdadeiro em falso e vice-versa.

    