Estrutura de repetição foreach

Introdução
    O laço for aprimorado, também conhecido como laço for-each, é usado para iterar sobre arrays e coleções. Ele fornece uma maneira mais legível e concisa de 
percorrer elementos, eliminando a necessidade de um contador explícito ou variável de índice. Neste capítulo, exploraremos a sintaxe, o uso e os exemplos do laço 
for-each em Java.

Sintaxe
A sintaxe básica do loop for-each é a seguinte:
for (type variable : array) {
    // code to be executed
}

Pontos Principais:
    *   tipo: 
        O tipo de dado dos elementos do array.

    *   variável: 
        Uma variável temporária que armazena cada elemento do array durante a iteração.

    *   array: 
        O array sobre o qual será iterada.


Exemplo: Iterando sobre um Array

Vamos considerar um exemplo em que usamos o laço for-each para imprimir elementos de um array.

Código de Exemplo:
public class ForEachExample {
    public static void main(String[] args) {
        // Array of integers
        int[] numbers = {1, 2, 3, 4, 5};

        // Enhanced for loop to iterate over the array
        for (int num : numbers) {
            // Print the current element of the array
            System.out.println("Number: " + num);
        }
    }
}

Saída:
Number: 1
Number: 2
Number: 3
Number: 4
Number: 5



Exemplo: Iterando sobre um Array de Strings

Vamos considerar outro exemplo em que usamos o laço for-each para imprimir elementos de um array de strings.

Código de Exemplo:
public class ForEachStringExample {
    public static void main(String[] args) {
        // Array of strings
        String[] fruits = {"Apple", "Banana", "Cherry", "Date"};

        // Enhanced for loop to iterate over the array
        for (String fruit : fruits) {
            // Print the current element of the array
            System.out.println("Fruit: " + fruit);
        }
    }
}

Saída:
Fruit: Apple
Fruit: Banana
Fruit: Cherry
Fruit: Date


Exemplo: Soma de Elementos em um Array

Vamos considerar um exemplo em que usamos o loop for-each para calcular a soma dos elementos em um array.

Código de exemplo:
public class SumForEachExample {
    public static void main(String[] args) {
        // Array of integers
        int[] numbers = {1, 2, 3, 4, 5};
        int sum = 0;

        // Enhanced for loop to iterate over the array
        for (int num : numbers) {
            // Add the current element to the sum
            sum += num;
        }

        // Print the calculated sum
        System.out.println("Sum: " + sum);
    }
}

Saída:
Sum: 15


Exemplo: Encontrando o Elemento Máximo em um Array

Vamos considerar um exemplo em que usamos o laço for-each para encontrar o elemento máximo em um array.

Código de Exemplo:
public class MaxForEachExample {
    public static void main(String[] args) {
        // Array of integers
        int[] numbers = {1, 2, 3, 4, 5};
        int max = numbers[0];

        // Enhanced for loop to iterate over the array
        for (int num : numbers) {
            // Update max if the current element is greater
            if (num > max) {
                max = num;
            }
        }

        // Print the maximum element
        System.out.println("Maximum: " + max);
    }
}

Saída:
Maximum: 5


Diagrama: Fluxograma do loop for-ach

    Start
     |
 [initialize]
     |
 [for-each element in array]
     |
 [execute loop body]
     |
 [next element]
     |
 [all elements processed]
     |
    End

Conclusão
    O laço for-each é uma instrução de fluxo de controle útil e concisa em Java que simplifica o processo de iteração em arrays. Ele melhora a legibilidade do código 
e reduz a probabilidade de erros associados aos laços for tradicionais. Ao compreender a sintaxe e os vários casos de uso do laço for-each, você pode escrever código 
Java mais eficiente e limpo.


